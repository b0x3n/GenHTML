Input file structure

 Input files are structured using indentation.

 The level of indentation tells GenHTML what type
 of element the line data is to be wrapped in.

 There are 4 main types of element:

   Headers
   Subheaders
   Paragraphs
   Pre blocks

 Which we can define using relative indentation.


 Headers

  A single input file may only contain a single
  header - this can be thought of as the main
  wrapper or page container, everything that
  follows belongs to the main header in that
  page.

  When GenHTML builds the output, headers and
  subheaders are used to generate links so that
  pages and sections can be easily navigated.

  The header always has zero indentation, and
  everything that belongs to it will have an
  indentation of 1 or more.


 Subheaders

  A subheader allows us to break a page into
  linkable sections. We can think of these as
  children to the main page header.

  It's basically a form of nesting - to create
  a new subheader all you need to do is make
  sure it's a single line of text and is
  indented 1 space more than the container.

  We can then divide the sub-sections by 
  adding further subheaders - but we can only
  go two sub-sections deep - example:

    |This is the parent header
    |
    | This is child header 1
    |
    |  This is grandchild header 1.1
    |
    |  This is grandchild header 1.2
    |
    | This is child header 2
    |
    |  This is grandchild header 2.1

  I added the | characters to highlight the left
  edge of the text file and illustrate the level
  of indentation and why it's important.

  I've limited GenHTML to this level of depth as
  it suited my needs, this may change with new
  versions or iterations.


 Paragraphs

  A paragraph is one or more lines that ends in
  one of:

    .   ,   :   ;   !   ?

  Characters.

  A paragraph will have an indentation of 1 space
  more than the parent header or subheader it
  belongs to.

  Example:

    |Section one
    |
    | This paragraph belongs to section 1. We can
    | add as many as we like, but a paragraph may
    | not contain a blank line,
    |
    | This will just result in a new paragraph
    | being opened.
    |
    | 
    | Sub header one
    |
    |  Now this paragraph belongs to Sub header
    |  one. If we want, we can divide this section
    |  up like so:
    |
    |  Sub header one point one
    |
    |   Struggling to think of stuff to type for
    |   this example, any ideas?

  I think you get the idea!


 Pre blocks

  These are similar to paragraphs, except we can
  include empty lines.

  We must also indent the block 3 places more than
  the containing header:

    |A block of pre
    |
    | We can use this to output examples of code,
    | command output, etc:
    |
    |   Here is a block of pre text.
    |
    |   We can leave blank lines, GenHTML will
    |   know the pre block is over when we 
    |   drop the level of indentation.
    |
    | Now we're back into a paragraph.

  There's a slight issue with this - the first
  line of the block MUST be indented 3 places
  more than the header or subheader it belongs
  to - and all subsequent lines must be at least
  the same level of indentation.

  For now it serves my purpose but in future
  iterations or versions this is likely to be
  changed.

 File index

  GenHTML expects an index file as its main
  source of input. This one file may contain
  any of the elements described above.

  It can also contain an index of input files
  to be included in the build, we do this by
  using an indentation that is 2 spaces greater
  than the containing header or subheader.

  For example, if we have a directory named
  txt that contains our index:

    txt/index

  Then we can do:

    php GenHTML --i txt/index --o doc

  Firstly, this will tell GenHTML that to load
  the index and that all of the input files 
  should be referenced relative to the txt/
  directory.

  Now, we can write our index something like:

    |A GenHTML demo
    |
    |  File one
    |  File two
    |
    | Files one and two are not very interesting,
    | hey - it's just an example!

  This tells GenHTML to include the files:

    txt/File-one
    txt/File-two

  The spaces are replaced with - characters to
  prevent issues with filenames and spaces.

  So now GenHTML will attempt to load the
  additional files, what does this mean in terms
  of the output?


 Output files

  By default, GenHTML will create a single-page
  HTML document, even if there are multiple
  input files.

  It will compile them all into a single document
  and create links to the various sections for
  navigation.

  If we specify the -multi-page switch, then
  GenHTML will create an individual HTML document
  for each input file, and they will be linked
  externally via a common index.html, as well as
  linked internally using anchors.

  To create a multi-page document:

    php GenHTML --i txt/index --o doc -multi-page

  Remember you can also use the short form -m
  switch, as well as the -silent or -s switches
  to suppress output to the terminal during the
  build.
  